#include<iostream>
using namespace std;

struct BstNode
{
    int data;
    BstNode* right;
    BstNode* left;
};

BstNode* createNode(int data)
{
    BstNode* root = new BstNode();
    root->data = data;
    root->left = root->right = NULL;
}

BstNode* Insert(BstNode* root,int data)
{
    if(root == NULL)
        root = createNode(data);
    else if(data <= root->data)
        root->left = Insert(root->left,data);
    else
        root->right = Insert(root->right,data);
}

void inorder(BstNode* root)
{
    if(root == NULL)
        return;
    inorder(root->left);
    cout<<root->data<<" ";
    inorder(root->right);
}
BstNode* findMin(BstNode* root)
{
    if(root == NULL)
        return NULL;
    else if(root->right == NULL)
        return root;
    return findMin(root->right);
    
}

BstNode* del(BstNode* root, int data)
{
    if(root == NULL)
        return root;
    else if(data<root->data)
        root->left = del(root->left,data);
    else if(data > root->data)
        root->right = del(root->right, data);
    else
    {
        if(root->left == NULL && root->right == NULL)
        {
            delete root;
            root = NULL;
            return root;
        }
        else if(root->left == NULL)
        {
            BstNode* temp = root;
            root = root->right;
            delete temp;
            return root;
        }
        else if(root->right == NULL)
        {
            BstNode* temp = root;
            root = root->left;
            delete root;
            return root;
        }
        else
        {
            BstNode* temp = findMin(root->right);   
            root->data = temp->data;
            root->right = del(root->right,temp->data);
            return root;
        }
    }
    
}
int main()
{
    BstNode* root = NULL;
    
    root = Insert(root,7);
    root = Insert(root,3);
    root = Insert(root,9);
    root = Insert(root,2);
    root = Insert(root,5);
    root = Insert(root,8);
    root = Insert(root,10);
    
    inorder(root);
    cout<<"\n";
    root = del(root,8);
    root = del(root,9);
    root = del(root,10);
    inorder(root);
    cout<<"\n";
    
}
